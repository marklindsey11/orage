{"metadata": {"provider": "azure", "service": "Storage", "service_name": "Azure Storage", "version": "20220420", "license": "ThreatModel for Azure Storage, by TrustOnCloud, under a Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA 4.0).", "source": "https://github.com/trustoncloud/threatmodel-for-azure-storage"}, "scorecard": {"global_assurance_program": {"score": "-"}, "specific_assurance_program": {"score": "-"}, "identity_management": {"score": "Azure IAM"}, "resource_based": {"score": "DFS ACL, file share ACL,<br>queue ACL, table ACL,<br>storage account access keys,<br>SAS tokens"}, "network_filtering": {"score": "VNET security,<br>Storage Account Firewall"}, "encryption_at_rest": {"score": "Yes"}, "encryption_in_transit": {"score": "Yes"}, "aws_cloudformation": {"score": "-"}, "aws_tag_based_abac": {"score": "-"}, "aws_cloudwatch_events": {"score": "-"}, "aws_vpc_endpoint": {"score": "-"}, "aws_vpc_endpoint_Policy": {"score": "-"}, "aws_resource_level": {"score": "-"}, "gcp_vpc_service_controls": {"score": "-"}, "number_of_actions": {"score": 164}, "number_of_iam_permissions": {"score": 139}, "number_of_events": {"score": 164}, "event_coverage": {"score": "100.0"}, "api_without_event": {"score": 0}}, "feature_classes": {"Storage.FC1": {"order": 1, "name": "Storage account", "class_relationship": [], "description": "Azure storage is Microsoft's cloud storage solution for modern data storage scenarios. Azure storage offers a massively scalable object store for data objects, a file system service for the cloud, a messaging store for reliable messaging, and a NoSQL store.", "long_description": ""}, "Storage.FC2": {"order": 6, "name": "Blob storage, containers, data Lake storage Gen2", "class_relationship": [{"type": "parent", "class": "Storage.FC1"}], "description": "Data Lake storage Gen2 is the storage for big data analysis based on Azure blob storage.", "long_description": ""}, "Storage.FC3": {"order": 3, "name": "File shares", "class_relationship": [{"type": "parent", "class": "Storage.FC1"}], "description": "Azure Files offers fully managed file shares in the cloud that are accessible via the industry standard Server Message Block (SMB) protocol or Network File System (NFS) protocol.", "long_description": ""}, "Storage.FC4": {"order": 4, "name": "Queues", "class_relationship": [{"type": "parent", "class": "Storage.FC1"}], "description": "Azure queue storage is a service for storing large numbers of messages. Access messages via HTTP/S calls.", "long_description": ""}, "Storage.FC5": {"order": 5, "name": "Tables", "class_relationship": [{"type": "parent", "class": "Storage.FC1"}], "description": "The most economic table style storage over the word to store petabytes of semi-structured data and keep costs down.", "long_description": ""}, "Storage.FC6": {"order": 9, "name": "Blob lifecycle", "class_relationship": [{"type": "parent", "class": "Storage.FC2"}], "description": "Azure blob storage lifecycle management offers a rich, rule-based policy which you can use to transition your data to the best access tier and to expire data at the end of its lifecycle.", "long_description": ""}, "Storage.FC7": {"order": 2, "name": "Key access feature", "class_relationship": [{"type": "parent", "class": "Storage.FC1"}], "description": "When you create a storage account, Azure generates two 512-bit storage account access keys. These keys can be used to authorise access to data in your storage account via Shared Key authorization. Microsoft recommends that you use Azure Key Vault to manage your access keys, and that you regularly rotate and regenerate your keys.", "long_description": ""}, "Storage.FC8": {"order": 3, "name": "Monitoring", "class_relationship": [{"type": "parent", "class": "Storage.FC1"}], "description": "Storage insights provides comprehensive monitoring of your Azure storage accounts by delivering a unified view of your Azure storage services performance, capacity, and availability.", "long_description": ""}, "Storage.FC9": {"order": 4, "name": "Replication", "class_relationship": [{"type": "parent", "class": "Storage.FC1"}], "description": "Azure storage always stores multiple copies of data. It protects from planned and unplanned events, including transient hardware failures, network or power outages, and massive natural disasters. Redundancy ensures that your storage account meets its availability and durability targets even in the face of failures.", "long_description": ""}, "Storage.FC10": {"order": 8, "name": "Blob inventory", "class_relationship": [{"type": "parent", "class": "Storage.FC2"}], "description": "The Azure storage blob inventory feature provides an overview of your containers, blobs, snapshots, and blob versions within a storage account. Use the inventory report to understand various attributes of blobs and containers such as your total data size, age, encryption status, immutability policy, or legal hold.", "long_description": ""}}, "threats": {"Storage.T1": {"feature_class": "Storage.FC7", "name": "Privilege escalation accessing storage access key", "description": "Storage accounts can have up to 2 access keys with unrestricted permissions on this storage account. An attacker can generate a new access key or use an existing key to gain unrestricted access.", "access": {"OR": ["Microsoft.Storage/storageAccounts/listkeys/action", "Microsoft.Storage/storageAccounts/regeneratekey/action", "Microsoft.Storage/storageAccounts/rotateKey/action", "Microsoft.Storage/storageAccounts/revokeUserDelegationKeys/action", "Microsoft.Storage/storageAccounts/localusers/listKeys/action", "Microsoft.Storage/storageAccounts/blobServices/generateUserDelegationKey/action"]}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 6.5}, "Storage.T2": {"feature_class": "Storage.FC7", "name": "Block data access of a SAS token", "description": "SAS tokens are derived from an access key. Functionality is typically used by non-Azure applications to access data in a storage account. An attacker can rotate, or regenerate an access key to invalidate its SAS tokens to block data access to any applications using SAS tokens derived from this access key.", "access": {"OR": ["Microsoft.Storage/storageAccounts/regeneratekey/action", "Microsoft.Storage/storageAccounts/rotateKey/action", "Microsoft.Storage/storageAccounts/revokeUserDelegationKeys/action"]}, "hlgoal": "DoS", "mitre_attack": "TA0040", "cvss": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H", "retired": "false", "cvss_severity": "Medium", "cvss_score": 4.9}, "Storage.T3": {"feature_class": "Storage.FC7", "name": "Exfiltrate data using account key access or SAS token", "description": "Storage access keys have unrestricted access to the storage account they are coming from; SAS token can give access to a blob, directory, or file. An attacker can use a stolen storage account access key or SAS tokens to access confidential data, or modify data maliciously.", "access": {}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N", "retired": "false", "cvss_severity": "High", "cvss_score": 8.1}, "Storage.T4": {"feature_class": "Storage.FC1", "name": "Use storage account name to steal data or distribute malicious data", "description": "Azure storage account names are globally unique. An attacker can take over an old account name, or delete an existing one, and entangle any third party to use their account to steal or distribute malicious data.", "access": {"OPTIONAL": "Microsoft.Storage/storageAccounts/delete"}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:U/C:H/I:L/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 5.2}, "Storage.T5": {"feature_class": "Storage.FC2", "name": "Unauthorized data made public", "description": "An attacker (or someone by negligence) can create/modify a container to make it public and steal/exfiltrate/expose data.", "access": {"OR": ["Microsoft.Storage/storageAccounts/blobServices/write", "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write", "Microsoft.Storage/storageAccounts/blobServices/containers/write"]}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:N", "retired": "false", "cvss_severity": "High", "cvss_score": 8.1}, "Storage.T6": {"feature_class": "Storage.FC2", "name": "Privilege escalation by modifying file system ACL", "description": "Filesystem ACLs are used to limit access to entities via the filesystem endpoint. An attacker can modify those ACLs to escalate their own privileges.", "access": {"UNIQUE": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"}, "hlgoal": "LaunchAttack", "mitre_attack": "TA0004", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:N/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 6.2}, "Storage.T7": {"feature_class": "Storage.FC2", "name": "Recursively delete DFS directories and their content", "description": "DFS has a hierarchical architecture. An attacker can potentially delete multiple directories and files recursively to make them unavailable.", "access": {"UNIQUE": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/delete"]}, "hlgoal": "DoS", "mitre_attack": "TA0040", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 4.5}, "Storage.T8": {"feature_class": "Storage.FC2", "name": "Unauthorised modification of data", "description": "Common scenario for data Lake storage Gen2 is that incoming data after uploading to blob storage should not be modified. An attacker can modify data that can cause inconsistency in dependent subsystems.", "access": {"UNIQUE": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"}, "hlgoal": "DataManipulation", "mitre_attack": "TA0040", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 5.2}, "Storage.T9": {"feature_class": "Storage.FC2", "name": "Files encrypted by ransomware in DFS/blob", "description": "An attacker can encrypt files/objects in DFS or blobs using an encryption key not controlled by the owner, to request a ransom to access the decryption key.", "access": {"OR": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write", "directory:RWX;file:RWX"]}, "hlgoal": "FinancialGain", "mitre_attack": "TA0040", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H", "retired": "false", "cvss_severity": "Medium", "cvss_score": 6.1}, "Storage.T10": {"feature_class": "Storage.FC8", "name": "Exfiltrate data using diagnostic settings", "description": "Diagnostic settings can be set at storage account and/or blob level. An attacker can modify diagnostic settings, and send the storage accounts logs to another tenant/subscription to exfiltrate data.", "access": {"OR": ["Microsoft.Storage/storageAccounts/services/diagnosticsettings/write", "Microsoft.Storage/storageAccounts/providers/Microsoft.Insights/diagnosticsettings/write", "Microsoft.Storage/storageAccounts/blobServices/providers/Microsoft.Insights/diagnosticsettings/write", "Microsoft.Storage/storageAccounts/tableServices/providers/Microsoft.Insights/diagnosticsettings/write", "Microsoft.Storage/storageAccounts/fileServices/providers/Microsoft.Insights/diagnosticsettings/write", "Microsoft.Storage/storageAccounts/queueServices/providers/Microsoft.Insights/diagnosticsettings/write"]}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 4.2}, "Storage.T11": {"feature_class": "Storage.FC1", "name": "Man-in-the-middle attack via any storage account endpoint", "description": "Storage account endpoints support HTTP/S. An attacker can intercept or modify the traffic via man-in-the-middle attack (e.g. with fake certificate to get and modify data in transit via endpoints).", "access": {}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:N", "retired": "false", "cvss_severity": "High", "cvss_score": 7.1}, "Storage.T12": {"feature_class": "Storage.FC2", "name": "Infect with malware downstream processes", "description": "An attacker can distribute malicious and infected files via an object used by downstream services or a reputed company URL. An attacker can upload a malware instead of a valid file, and infect internal services or external users.", "access": {"UNIQUE": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"}, "hlgoal": "LaunchAttack", "mitre_attack": "TA0003", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:R/S:U/C:L/I:H/A:L", "retired": "false", "cvss_severity": "Medium", "cvss_score": 5.4}, "Storage.T13": {"feature_class": "Storage.FC9", "name": "Unauthorised access to data via storage account replication", "description": "Replication allows you to replicate objects and their metadata. At this moment it is not available for DFS, but in future will be, that can be additional attack vector. An attacker can configure replication on a storage account to replicate objects (or its metadata or tagging) to exfiltrate data.", "access": {"UNIQUE": "Microsoft.Storage/storageAccounts/write"}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 4.9}, "Storage.T14": {"feature_class": "Storage.FC1", "name": "Unauthorised access to data by direct access to the physical disk", "description": "Azure is operating the storage physical disks. An attacker (i.e. an Azure insider) can get access to data stored on the device.", "access": {}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:P/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 4.2}, "Storage.T15": {"feature_class": "Storage.FC3", "name": "Exfiltrate data using different access method", "description": "Data stored on file share using SMB protocol can be accessible using HTTP/S protocol. An attacker can exfiltrate data using a different method of access (via blob access or static website endpoint) or an attacker can create an unauthorized DFS endpoint to gain access to the data in the blob.", "access": {"OR": ["Microsoft.Storage/storageAccounts/fileServices/fileshares/files/read", {"AND": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write", "Microsoft.Storage/storageAccounts/blobServices/containers/write"]}]}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N", "retired": "false", "cvss_severity": "High", "cvss_score": 7.3}, "Storage.T16": {"feature_class": "Storage.FC3", "name": "Increase billing by file share overflow", "description": "An attacker can upload terabytes to the file share and cause billing implication - especially with soft deleted option.", "access": {"UNIQUE": ["Microsoft.Storage/storageAccounts/fileServices/fileshares/files/write"]}, "hlgoal": "FinancialDrain", "mitre_attack": "TA0040", "cvss": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N", "retired": "false", "cvss_severity": "Low", "cvss_score": 3.5}, "Storage.T17": {"feature_class": "Storage.FC3", "name": "Privilege escalation by modifying file share ACL", "description": "File share ACLs are used to limit access to entities via a file share endpoint. An attacker can modify those ACLs to escalate their own privileges.", "access": {"OR": ["Microsoft.Storage/storageAccounts/fileServices/fileshares/files/write", "Microsoft.Storage/storageAccounts/fileServices/fileshares/files/modifypermissions/action"]}, "hlgoal": "LaunchAttack", "mitre_attack": "TA0004", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:N/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 6.2}, "Storage.T18": {"feature_class": "Storage.FC3", "name": "Recursively delete directories and the content in the file share", "description": "File share similar to the DFS has hierarchical architecture. An attacker can potentially delete multiple directories and files recursively.", "access": {"UNIQUE": "Microsoft.Storage/storageAccounts/fileServices/fileshares/files/delete"}, "hlgoal": "DoS", "mitre_attack": "TA0040", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 4.5}, "Storage.T19": {"feature_class": "Storage.FC3", "name": "Files encrypted by ransomware in file shares", "description": "An attacker can encrypt files making them unusable in file share using an encryption key not controlled by the file owner, to request a ransom to access the decryption key.", "access": {"AND": ["Microsoft.Storage/storageAccounts/fileServices/fileshares/files/read", "Microsoft.Storage/storageAccounts/fileServices/fileshares/files/write", "directory:W;file:W"]}, "hlgoal": "FinancialGain", "mitre_attack": "TA0040", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 4.5}, "Storage.T20": {"feature_class": "Storage.FC3", "name": "Distribute malicious files via file share", "description": "An attacker can distribute malicious and infected files via Windows shares. An attacker can infect underlying services (especially VMs) in that way.", "access": {"UNIQUE": "Microsoft.Storage/storageAccounts/fileServices/fileshares/files/write"}, "hlgoal": "LaunchAttack", "mitre_attack": "TA0003", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:R/S:U/C:N/I:H/A:L", "retired": "false", "cvss_severity": "Medium", "cvss_score": 4.9}, "Storage.T21": {"feature_class": "Storage.FC3", "name": "Usage outdated protocols to access file shares", "description": "The primary reason to disable encryption in transit is to support a legacy application that must be run on an outdated operating system, such as Windows Server 2008 R2 or older Linux distribution. An attacker can hack old protocols and libraries to gain more permissions.", "access": {}, "hlgoal": "LaunchAttack", "mitre_attack": "TA0004", "cvss": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:N", "retired": "false", "cvss_severity": "High", "cvss_score": 7.1}, "Storage.T22": {"feature_class": "Storage.FC2", "name": "Distribute malicious infected files via a reputed web address", "description": "Storage account can be configured as a static website server. An attacker can distribute malicious and infected files via a website hosted on a storage account.", "access": {"UNIQUE": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"}, "hlgoal": "LaunchAttack", "mitre_attack": "TA0003", "cvss": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:N", "retired": "false", "cvss_severity": "High", "cvss_score": 7.1}, "Storage.T23": {"feature_class": "Storage.FC1", "name": "Exfiltrate data using different service", "description": "An attacker can exfiltrate data using different services (e.g. Azure data share, Logic App). Moreover these data can be stored in different subscriptions/tenants.", "access": {"AND": ["Microsoft.Storage/storageAccounts/write", "Microsoft.Authorization/role assignments/write"]}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 4.9}, "Storage.T24": {"feature_class": "Storage.FC10", "name": "Exfiltrate data using blob inventory functionality", "description": "An attacker can setup/modify and get access to blob inventory and in that way get knowledge about running services and exfiltrate data.", "access": {"OR": ["Microsoft.Storage/storageAccounts/inventoryPolicies/read", "Microsoft.Storage/storageAccounts/inventoryPolicies/write", "Microsoft.Storage/storageAccounts/inventoryPolicies/delete"]}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 4.5}, "Storage.T25": {"feature_class": "Storage.FC6", "name": "Recursively delete data using blob storage lifecycle management", "description": "An attacker can setup/modify blob storage lifecycle management and in that way delete data, even after a time.", "access": {"OR": ["Microsoft.Storage/storageAccounts/blobServices/containers/clearLegalHold/action", "Microsoft.Storage/storageAccounts/blobServices/containers/setLegalHold/action", "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies/extend/action", "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies/delete", "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies/write", "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies/lock/action", "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies/read"]}, "hlgoal": "DataManipulation", "mitre_attack": "TA0040", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:L", "retired": "false", "cvss_severity": "Medium", "cvss_score": 5.2}, "Storage.T26": {"feature_class": "Storage.FC1", "name": "Unauthorized data exposed by breaking CORS settings", "description": "CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. An attacker using the CORS misconfiguration can gain privileged access via origin reflection, enticing a user to access a page with a malicious script, returning sensitive data.", "access": {"UNIQUE": "Microsoft.Storage/storageAccounts/write"}, "hlgoal": "LaunchAttack", "mitre_attack": "TA0004", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:R/S:U/C:N/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 4.3}, "Storage.T27": {"feature_class": "Storage.FC4", "name": "Privilege escalation by modifying queue ACL", "description": "Queue ACLs are used to limit access to entities via the queue share endpoint. An attacker can modify those ACLs to escalate their own privileges.", "access": {"OR": ["Microsoft.Storage/storageAccounts/queueServices/write", "Microsoft.Storage/storageAccounts/queueServices/queues/write"]}, "hlgoal": "LaunchAttack", "mitre_attack": "TA0004", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:N/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 6.2}, "Storage.T28": {"feature_class": "Storage.FC5", "name": "Privilege escalation by modifying table ACL", "description": "Table ACLs are used to limit access to entities via the table endpoint. An attacker can modify those ACLs to escalate their own privileges.", "access": {"OR": ["Microsoft.Storage/storageAccounts/tableServices/write", "Microsoft.Storage/storageAccounts/tableServices/tables/write"]}, "hlgoal": "LaunchAttack", "mitre_attack": "TA0004", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:N/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 6.2}, "Storage.T29": {"feature_class": "Storage.FC1", "name": "DDoS on endpoint", "description": "An attacker can overload a public endpoint by a DDoS attack. If your application approaches or exceeds any of the scalability targets, it may encounter increased transaction latencies or throttling with 500 errors.", "access": {}, "hlgoal": "DoS", "mitre_attack": "TA0040", "cvss": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H", "retired": "false", "cvss_severity": "Medium", "cvss_score": 5.9}, "Storage.T30": {"feature_class": "Storage.FC2", "name": "Unauthorized access to data using a rogue DFS endpoint", "description": "An attacker can create an unauthorised DFS endpoint to gain access to the data in the blob.", "access": {"AND": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write", "Microsoft.Storage/storageAccounts/blobServices/containers/write"]}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N", "retired": "false", "cvss_severity": "High", "cvss_score": 7.3}, "Storage.T31": {"feature_class": "Storage.FC4", "name": "Impacting queues messages integrity or complete data loss of sensitive data", "description": "Messages in queues can be purged and deleted; queues can themselves be deleted with all the messages, and queues parameters changes can result in loss of all the messages. An attacker can delete or alter the messages and queues using any of those methods impacting downstream applications and processes and causing loss of integrity and DoS.", "access": {"OR": ["Microsoft.Storage/storageAccounts/queueServices/write", "Microsoft.Storage/storageAccounts/queueServices/queues/write", "Microsoft.Storage/storageAccounts/queueServices/queues/delete"]}, "hlgoal": "DataManipulation", "mitre_attack": "TA0040", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:L", "retired": "false", "cvss_severity": "Medium", "cvss_score": 5.2}, "Storage.T32": {"feature_class": "Storage.FC4", "name": "Unauthorized access to a sensitive message", "description": "An attacker can get access to the sensitive message or modify the message that will be consumed by other services and in that way access to other services.", "access": {"OR": ["Microsoft.Storage/storageAccounts/queueServices/write", "Microsoft.Storage/storageAccounts/queueServices/queues/write"]}, "hlgoal": "DataTheft", "mitre_attack": "TA0010", "cvss": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:N", "retired": "false", "cvss_severity": "Medium", "cvss_score": 6.1}}, "control_objectives": {"Storage.CO1": {"description": "Limit the IAM entities allowed to execute the IAM actions required to perform attacks"}, "Storage.CO2": {"description": "Identify and ensure the protection all storage accounts hosting your objects"}, "Storage.CO3": {"description": "Integrate ACLs in the IAM Operating Model to allow non-AD access files and directories"}, "Storage.CO4": {"description": "Ensure no storage account allow public access to blob"}, "Storage.CO5": {"description": "Protect primary data against loss"}, "Storage.CO6": {"description": "Enable soft-delete on containers, blobs, and file shares"}, "Storage.CO7": {"description": "Enable hierarchical namespace in storage account, only when required"}, "Storage.CO8": {"description": "Enforce encryption-in-transit"}, "Storage.CO9": {"description": "Connect via private endpoint"}, "Storage.CO10": {"description": "Block access to the endpoints"}, "Storage.CO11": {"description": "Enable storage accounts monitoring & notifications"}, "Storage.CO12": {"description": "Enforce encryption-at-rest"}, "Storage.CO13": {"description": "Apply cloud adoption, strategy, and governance"}, "Storage.CO14": {"description": "Govern Cross-Origin resource sharing"}, "Storage.CO15": {"description": "Scan input/output objects for malware"}}, "controls": {"Storage.C1": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "", "description": "Limit the access to the IAM actions required to perform attacks using Azure IAM, following the IAM Operating Model and using the Azure IAM ThreatModel.", "testing": "Request the list of authorized IAM principals that have the permissions required to launch attacks, its review process, and its review records.", "effort": "Medium", "mitigate": [{"threat": "Storage.T1", "impact": "Medium", "priority": 2.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T2", "impact": "Medium", "priority": 2.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T4", "impact": "Medium", "priority": 2.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T5", "impact": "Medium", "priority": 2.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "High"}, {"threat": "Storage.T6", "impact": "Medium", "priority": 2.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T7", "impact": "Medium", "priority": 2.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T8", "impact": "Medium", "priority": 2.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Medium", "priority": 2.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T12", "impact": "Medium", "priority": 2.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T23", "impact": "High", "priority": 3.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T24", "impact": "Medium", "priority": 2.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T25", "impact": "Medium", "priority": 2.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T31", "impact": "Low", "priority": 1.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T32", "impact": "Low", "priority": 1.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1", "Storage.FC10", "Storage.FC2", "Storage.FC4", "Storage.FC6", "Storage.FC7"], "weighted_priority": "Very High", "weighted_priority_score": 4, "queryable_objective_id": 1, "queryable_id": 1}, "Storage.C2": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO2", "retired": "false", "assured_by": "", "depends_on": "", "description": "Define an ACL or IAM authentication for every data Lake storage Gen2. Ideally use Azure AD only, and multiple DLS if fine-grained access is required.", "testing": "Request the list of all storage accounts you control, define their authorized data classification, identify whether the data is primary and the mechanism and records to ensure the accuracy of those metadata", "effort": "High", "mitigate": [{"threat": "Storage.T5", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T15", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T30", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "High"}], "feature_class": ["Storage.FC2", "Storage.FC3"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 2, "queryable_id": 2}, "Storage.C3": {"coso": "Detective", "nist_csf": "Detect", "objective": "Storage.CO2", "retired": "false", "assured_by": "", "depends_on": "Storage.C2", "description": "Use a data discovery tool to control that no sensitive data are stored in unauthorized storage account", "testing": "Upload a higher classification data in a storage account, it should be detected.", "effort": "Medium", "mitigate": [{"threat": "Storage.T5", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 2, "queryable_id": 3}, "Storage.C4": {"coso": "Detective", "nist_csf": "Detect", "objective": "Storage.CO2", "retired": "false", "assured_by": "", "depends_on": "", "description": "Use a data discovery tool to ensure the storage account names, object names, and tags do not contain sensitive data", "testing": "Create 1) a storage account name, 2) object names, or 3) tags with sensitive data, it should be detected.", "effort": "Very High", "mitigate": [{"threat": "Storage.T5", "impact": "Medium", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 2, "queryable_id": 4}, "Storage.C5": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO3", "retired": "false", "assured_by": "", "depends_on": "Storage.C1", "description": "Integrate the access to files and directories via ACL in the IAM Operating Model", "testing": "Request the IAM operating model for the access to files and directories via ACL", "effort": "Low", "mitigate": [{"threat": "Storage.T7", "impact": "High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T31", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T32", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC4"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 3, "queryable_id": 5}, "Storage.C6": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO4", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized storage accounts with allowblobPublicAccess enabled, ideally none", "testing": "Request the list of authorized storage accounts with allowblobPublicAccess enabled, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T5", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "High"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 4, "queryable_id": 6}, "Storage.C7": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO4", "retired": "false", "assured_by": "Storage.C9", "depends_on": "Storage.C6", "description": "Ensure no storage accounts have allowblobPublicAccess enabled, except if authorized.", "testing": "Request 1) the mechanism ensuring only authorized storage accounts have allowblobPublicAccess enabled, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "High", "mitigate": [{"threat": "Storage.T5", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T15", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T30", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}], "feature_class": ["Storage.FC2", "Storage.FC3"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 4, "queryable_id": 7}, "Storage.C8": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO4", "retired": "false", "assured_by": "", "depends_on": "Storage.C6", "description": "Prevent the creation/update of storage accounts with allowblobPublicAccess enabled (e.g. using Azure Policy on deny mode - \"[Preview]: storage account public access should be disallowed\").", "testing": "Create a storage account with allowblobPublicAccess, it should be denied.", "effort": "High", "mitigate": [{"threat": "Storage.T5", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T6", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T15", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T30", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}], "feature_class": ["Storage.FC2", "Storage.FC3"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 4, "queryable_id": 8}, "Storage.C9": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO4", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify no storage accounts have allowblobPublicAccess enabled (e.g. using Azure Policy on audit mode - \"[Preview]: storage account public access should be disallowed\").", "testing": "Create a storage account with allowblobPublicAccess, it should be detected.", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC2", "Storage.FC3"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 4, "queryable_id": 9}, "Storage.C10": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO5", "retired": "false", "assured_by": "Storage.C11", "depends_on": "", "description": "Enable versioning on blobs holding primary data", "testing": "Request the mechanism used to ensure versioning on blobs holding primary data, and its records", "effort": "Medium", "mitigate": [{"threat": "Storage.T7", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 5, "queryable_id": 10}, "Storage.C11": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO5", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify blobs holding primary data are versioned", "testing": "Remove versioning from a blob holding primary data, it should be detected", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC2"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 5, "queryable_id": 11}, "Storage.C12": {"coso": "Directive", "nist_csf": "Recover", "objective": "Storage.CO5", "retired": "false", "assured_by": "", "depends_on": "", "description": "Backup primary data in a location which have different security authority (<a href=\"https://docs.microsoft.com/en-us/azure/backup/blob-backup-overview\">ref 1</a>, <a href=\"https://docs.microsoft.com/en-us/azure/backup/backup-afs\">ref 2</a>)", "testing": "Request the mechanism used to backup primary data in a location which have different security authority, its records of execution, and records of restoration testing", "effort": "High", "mitigate": [{"threat": "Storage.T7", "impact": "High", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T17", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T18", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T19", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T20", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC3"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 5, "queryable_id": 12}, "Storage.C13": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "For each storage account (or type of data), define the minimum retention of container and blob from the deletion (e.g. 7 days)", "testing": "For each storage account, request the minimum retention of container and blob from the deletion, its review process, and its review records", "effort": "Low", "mitigate": [{"threat": "Storage.T7", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T12", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 13}, "Storage.C14": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "Storage.C16", "depends_on": "Storage.C13", "description": "Ensure storage accounts have soft-delete for the blob enabled for at least the defined minimum retention", "testing": "Request 1) the mechanism ensuring storage accounts have soft-delete for the blob enabled for at least the defined minimum retention, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "Low", "mitigate": [{"threat": "Storage.T7", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T12", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 6, "queryable_id": 14}, "Storage.C15": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "Storage.C13", "description": "Prevent the creation of storage accounts without soft-delete for the blob option (e.g. by using an Azure Policy in deny mode).", "testing": "Create a storage account without soft-delete for the blob, it should be denied", "effort": "High", "mitigate": [{"threat": "Storage.T9", "impact": "High", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 15}, "Storage.C16": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify all storage accounts have soft-delete for the blob enabled (e.g. by using an Azure Policy in audit mode).", "testing": "Create a storage account without soft-delete for the blob option, it should be detected.", "effort": "Low", "mitigate": [], "feature_class": ["Storage.FC2"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 6, "queryable_id": 16}, "Storage.C17": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "Storage.C19", "depends_on": "Storage.C13", "description": "Ensure storage accounts have soft-delete for the container enabled", "testing": "Request 1) the mechanism ensuring storage accounts have soft-delete for the container enabled, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "Medium", "mitigate": [{"threat": "Storage.T7", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T12", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 6, "queryable_id": 17}, "Storage.C18": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "Storage.C13", "description": "Prevent the creation of storage accounts without soft-delete for the container option (e.g. by using an Azure Policy in deny mode).", "testing": "Create a storage account without soft-delete for the container, it should be denied.", "effort": "High", "mitigate": [{"threat": "Storage.T9", "impact": "High", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 18}, "Storage.C19": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify storage accounts without soft-delete for the container are not configured.", "testing": "Create a storage account without soft-delete for the container option, it should be detected.", "effort": "Low", "mitigate": [], "feature_class": ["Storage.FC2"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 6, "queryable_id": 19}, "Storage.C20": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO7", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized storage accounts with hierarchical namespace (DFS) option enabled.", "testing": "Request the list of authorized {resources}, its review process, and its review records", "effort": "Medium", "mitigate": [{"threat": "Storage.T6", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T7", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T30", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "High"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 7, "queryable_id": 20}, "Storage.C21": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO7", "retired": "false", "assured_by": "Storage.C22", "depends_on": "Storage.C20", "description": "Ensure only authorized storage accounts with hierarchical namespace (DFS) option enabled are configured", "testing": "Request 1) the mechanism ensuring only authorized storage accounts with hierarchical namespace (DFS) option enabled are configured, 2) its records of execution for all new storage accounts with hierarchical namespace (DFS) option enabled and 3) plan to move any older storage accounts with hierarchical namespace (DFS) option enabled.", "effort": "Medium", "mitigate": [{"threat": "Storage.T6", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T7", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T30", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 7, "queryable_id": 21}, "Storage.C22": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO7", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify storage accounts with hierarchical namespace (DFS) option enabled are not configured (e.g. by using an Azure Policy {\"isHnsEnabled\": \"true\"} in audit mode)", "testing": "Create a storage account with hierarchical namespace (DFS) option enabled, it should be detected", "effort": "Medium", "mitigate": [], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 7, "queryable_id": 22}, "Storage.C23": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "", "description": "Limit access to delete storage accounts, via Azure Policy and IAM. Do not ever delete a sensitive storage account (e.g. just delete all data) to make sure that storage account FQDN cannot be used as a source of attacks.", "testing": "Try to delete storage account, it should be denied", "effort": "Medium", "mitigate": [{"threat": "Storage.T5", "impact": "Very High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "High"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Very High", "weighted_priority_score": 4, "queryable_objective_id": 1, "queryable_id": 23}, "Storage.C24": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO2", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized IPs to use SAS tokens, and their authorized time window.", "testing": "Request the list of authorized IPs to use SAS tokens, its review process, and its review records.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T3", "impact": "Very Low", "priority": 1.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T31", "impact": "Very Low", "priority": 1.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T32", "impact": "Very Low", "priority": 1.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC4", "Storage.FC7"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 2, "queryable_id": 24}, "Storage.C25": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO2", "retired": "false", "assured_by": "Storage.C26", "depends_on": "Storage.C24", "description": "Ensure SAS tokens allow only authorized IPs, using the sourceIP field and enforcing HTTPS.", "testing": "Request 1) the mechanism ensuring SAS tokens allow only authorized IPs, 2) its records of execution for all new SAS tokens, and 3) plan to move any older SAS tokens.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T1", "impact": "Low", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Low", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T12", "impact": "Medium", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T31", "impact": "Low", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T32", "impact": "Low", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC4", "Storage.FC7"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 2, "queryable_id": 25}, "Storage.C26": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO2", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify SAS tokens only allow authorized IPs.", "testing": "Deploy a SAS token with an unauthorized IP, it should be detected", "effort": "Medium", "mitigate": [], "feature_class": ["Storage.FC2", "Storage.FC4", "Storage.FC7"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 2, "queryable_id": 26}, "Storage.C27": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized Groups to use in permissions for data Lake storage Gen2.", "testing": "Request the list of authorized Groups, its review process, and its review records.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T6", "impact": "Very Low", "priority": 1.0, "max_dependency": 0.0, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T7", "impact": "Very Low", "priority": 1.0, "max_dependency": 0.0, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T8", "impact": "Very Low", "priority": 1.0, "max_dependency": 0.0, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T15", "impact": "Very Low", "priority": 1.0, "max_dependency": 0.0, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T30", "impact": "Very Low", "priority": 1.0, "max_dependency": 0.0, "priority_overall": 1.0, "cvss": "High"}], "feature_class": ["Storage.FC2", "Storage.FC3"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 1, "queryable_id": 27}, "Storage.C28": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "Storage.C27", "description": "Ensure only authorized Groups are used in ACLs for data Lake storage Gen2.", "testing": "Review ACLs against usage of individual users' service principal.", "effort": "Low", "mitigate": [{"threat": "Storage.T1", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T2", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T7", "impact": "High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T15", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T30", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}], "feature_class": ["Storage.FC2", "Storage.FC3", "Storage.FC7"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 1, "queryable_id": 28}, "Storage.C29": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "Storage.C27", "description": "Use name convention for Groups adding Suffix R/RW and Entity to be used.", "testing": "Review Group-Name convention.", "effort": "Medium", "mitigate": [{"threat": "Storage.T1", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T2", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T7", "impact": "High", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T15", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T30", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}], "feature_class": ["Storage.FC2", "Storage.FC3", "Storage.FC7"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 1, "queryable_id": 29}, "Storage.C30": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO11", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of directories and blobs that do not need modification after uploading to DFS/blob.", "testing": "Request the list of directories and blobs for immutable blobs functionality.", "effort": "Medium", "mitigate": [{"threat": "Storage.T7", "impact": "Very Low", "priority": 0.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T8", "impact": "Very Low", "priority": 0.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T12", "impact": "Very Low", "priority": 0.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 11, "queryable_id": 30}, "Storage.C31": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO2", "retired": "false", "assured_by": "", "depends_on": "Storage.C30", "description": "Use immutable blobs.", "testing": "Check the usage of immutable blobs.", "effort": "Medium", "mitigate": [{"threat": "Storage.T8", "impact": "Very High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T12", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 2, "queryable_id": 31}, "Storage.C32": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain an architecture of data Lake storage Gen2 ACL vs IAM based on requirements. Microsoft recommends using Azure Active Directory (Azure AD) to authorize requests against blob and queue data, if possible, instead of Shared Key. Azure AD provides superior security and ease of use over Shared Key.", "testing": "Check documentation.", "effort": "Medium", "mitigate": [{"threat": "Storage.T6", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T7", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 1, "queryable_id": 32}, "Storage.C33": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "Storage.C32", "description": "Integrate the access to directories and objects via ACL in the IAM Operating Model, not mixing IAM and ACL access method.", "testing": "Request the IAM operating model for the directories and objects.", "effort": "Low", "mitigate": [{"threat": "Storage.T6", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T7", "impact": "High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T15", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T30", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}], "feature_class": ["Storage.FC2", "Storage.FC3"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 1, "queryable_id": 33}, "Storage.C34": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "Storage.C36", "depends_on": "", "description": "Ensure storage accounts have soft-delete for the blob enabled", "testing": "Request 1) the mechanism ensuring storage accounts have soft-delete for the blob enabled, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "High", "mitigate": [{"threat": "Storage.T6", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T7", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T12", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T25", "impact": "Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC6"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 34}, "Storage.C35": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Prevent the creation of storage accounts without soft-delete for the blob option (e.g. by using an Azure Policy \"Microsoft.storage/storageaccounts/deleteRetentionPolicy\" in deny mode).", "testing": "Create a storage account without soft-delete for the blob, it should be denied", "effort": "High", "mitigate": [{"threat": "Storage.T9", "impact": "High", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T25", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC6"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 35}, "Storage.C36": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify all storage accounts have soft-delete for the blob enabled", "testing": "Create a storage account without soft-delete for the blob option, it should be detected.", "effort": "Low", "mitigate": [], "feature_class": ["Storage.FC2", "Storage.FC6"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 36}, "Storage.C37": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "Storage.C39", "depends_on": "", "description": "Ensure storage accounts have soft-delete for the container enabled", "testing": "Request 1) the mechanism ensuring storage accounts have soft-delete for the container enabled, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "Medium", "mitigate": [{"threat": "Storage.T7", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T12", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T25", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC6"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 6, "queryable_id": 37}, "Storage.C38": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "Storage.C34", "description": "Prevent the creation of storage accounts without soft-delete for the container option (e.g. by using an Azure Policy in deny mode).", "testing": "Create a storage account without soft-delete for the container, it should be denied.", "effort": "High", "mitigate": [{"threat": "Storage.T9", "impact": "High", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T25", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC6"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 38}, "Storage.C39": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify storage accounts without soft-delete for the container are not configured.", "testing": "Create a storage account without soft-delete for the container option, it should be detected.", "effort": "Low", "mitigate": [], "feature_class": ["Storage.FC2", "Storage.FC6"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 6, "queryable_id": 39}, "Storage.C40": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO9", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized VNETs for the blob, file shares, queues, tables, DFS access via private endpoint.", "testing": "Request the list of authorized IPs, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T2", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T6", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T11", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T12", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T15", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T29", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T30", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T31", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T32", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1", "Storage.FC2", "Storage.FC3", "Storage.FC4", "Storage.FC7"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 9, "queryable_id": 40}, "Storage.C41": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO9", "retired": "false", "assured_by": "Storage.C43", "depends_on": "Storage.C40", "description": "Ensure only authorized VNET are configured for the blob, file shares, queues, tables, DFS.", "testing": "Request 1) the mechanism ensuring PE are in place 2) its records of execution for all new DFS.", "effort": "High", "mitigate": [{"threat": "Storage.T2", "impact": "Very High", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very High", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T6", "impact": "High", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T11", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T12", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T15", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T29", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T30", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T31", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T32", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1", "Storage.FC2", "Storage.FC3", "Storage.FC4", "Storage.FC7"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 9, "queryable_id": 41}, "Storage.C42": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO9", "retired": "false", "assured_by": "", "depends_on": "Storage.C40", "description": "Prevent the use of unauthorized VNETs by the storage account (e.g. by using Azure Policy).", "testing": "Configure an unauthorized VNETs on a storage account, it should be denied.", "effort": "High", "mitigate": [{"threat": "Storage.T2", "impact": "Very High", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very High", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T6", "impact": "High", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T11", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T12", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T15", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T29", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T30", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T31", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T32", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1", "Storage.FC2", "Storage.FC3", "Storage.FC4", "Storage.FC7"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 9, "queryable_id": 42}, "Storage.C43": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO9", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify the unauthorized VNETs cannot access to the storage account.", "testing": "Configure an unauthorized VNETs on a storage account, it should be detected.", "effort": "Low", "mitigate": [], "feature_class": ["Storage.FC1", "Storage.FC2", "Storage.FC3", "Storage.FC4", "Storage.FC7"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 9, "queryable_id": 43}, "Storage.C44": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "", "description": "Managed Identity is the preferred method for accessing data Lake storage Gen2 from parent services.", "testing": "Check if underlying services are not using SAS, or other password methods to authenticate.", "effort": "Medium", "mitigate": [{"threat": "Storage.T2", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T12", "impact": "High", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC7"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 1, "queryable_id": 44}, "Storage.C45": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO10", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of IPs authorized to access each storage account.", "testing": "Request the list of authorized blobs to use allowblobPublicAccess enabled, its review process, and its review records.", "effort": "Medium", "mitigate": [{"threat": "Storage.T2", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T11", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T15", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T29", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T30", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T31", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T32", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1", "Storage.FC2", "Storage.FC3", "Storage.FC4", "Storage.FC7"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 10, "queryable_id": 45}, "Storage.C46": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO10", "retired": "false", "assured_by": "Storage.C48", "depends_on": "Storage.C45", "description": "Ensure traffic is denied from all networks including trusted services, logging and metrics read access, and allow traffic only from authorized list (<a href=\"https://docs.microsoft.com/en-us/azure/storage/common/storage-network-security?tabs=azure-powershell\">ref</a>).", "testing": "Request 1) the mechanism ensuring firewall rules are in place 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "Medium", "mitigate": [{"threat": "Storage.T2", "impact": "High", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "High", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "High", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T6", "impact": "High", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T11", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T12", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T15", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T29", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T30", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T31", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T32", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1", "Storage.FC2", "Storage.FC3", "Storage.FC4", "Storage.FC7"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 10, "queryable_id": 46}, "Storage.C47": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO10", "retired": "false", "assured_by": "", "depends_on": "Storage.C45", "description": "Prevent access from unauthorized IPs, by allowing only authorized IP using Azure Storage Firewall.", "testing": "Access from unauthorized IPs, it should be denied.", "effort": "Low", "mitigate": [{"threat": "Storage.T2", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T15", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T29", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T30", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T31", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T32", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1", "Storage.FC2", "Storage.FC3", "Storage.FC4", "Storage.FC7"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 10, "queryable_id": 47}, "Storage.C48": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO10", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify access is possible only from allowed list (e.g. by using Azure Policy)", "testing": "Connect to storage from not allowed IP, it should be detected.", "effort": "Low", "mitigate": [], "feature_class": ["Storage.FC1", "Storage.FC2", "Storage.FC3", "Storage.FC4", "Storage.FC7"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 10, "queryable_id": 48}, "Storage.C49": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO5", "retired": "false", "assured_by": "", "depends_on": "", "description": "Ensure corporate backup policies are implemented for the blob, file shares, queues, tables, DFS, including regular testing.", "testing": "Request the backup policies for DFS, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T7", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T12", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 5, "queryable_id": 49}, "Storage.C50": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO5", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of objects with cross-tenant replication enabled.", "testing": "Request the list of authorized objects use allow cross-tenant replication, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T5", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T13", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC9"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 5, "queryable_id": 50}, "Storage.C51": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO5", "retired": "false", "assured_by": "Storage.C52", "depends_on": "Storage.C50", "description": "Ensure cross-tenant replication is allowed only for specific storage accounts.", "testing": "Request 1) the mechanism ensuring allowblobPublicAccess allow only authorized blobs, 2) its records of execution for all new blobs.", "effort": "High", "mitigate": [{"threat": "Storage.T5", "impact": "High", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T6", "impact": "High", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T13", "impact": "High", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC9"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 5, "queryable_id": 51}, "Storage.C52": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO4", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify storage accounts with cross-tenant replication enabled (e.g. using Azure Policy \"storage accounts should prevent cross tenant object replication\" in audit mode.).", "testing": "Creation of storage account with cross-tenant option enabled, it should be detected.", "effort": "Low", "mitigate": [], "feature_class": ["Storage.FC2", "Storage.FC9"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 4, "queryable_id": 52}, "Storage.C53": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO11", "retired": "false", "assured_by": "", "depends_on": "", "description": "Define a diagnostic settings design for storage accounts including destination (tenant/subscription), categories (ideally all) and rotation, based on requirement. Resource logs are not collected by default. You must create a diagnostic setting for each Azure resource to send its resource logs to a Log Analytics workspace to use with Azure Monitor Logs, Azure Event Hubs to forward outside of Azure, or to Azure storage for archiving.", "testing": "Request the design of diagnostic settings for storage accounts, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T1", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T7", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T8", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T10", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T13", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC7", "Storage.FC8", "Storage.FC9"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 11, "queryable_id": 53}, "Storage.C54": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO11", "retired": "false", "assured_by": "Storage.C57", "depends_on": "Storage.C53", "description": "Ensure diagnostic settings are configured properly to the architecture design.", "testing": "Request 1) the mechanism ensuring only authorized diagnostic settings destinations are enabled, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "Low", "mitigate": [{"threat": "Storage.T1", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T7", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T8", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T10", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T13", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC7", "Storage.FC8", "Storage.FC9"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 11, "queryable_id": 54}, "Storage.C55": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO11", "retired": "false", "assured_by": "", "depends_on": "Storage.C53", "description": "Ensure storage accounts have diagnostic settings configured according to the design.", "testing": "Create a storage account with on approved diagnostic settings options, it should be denied.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T1", "impact": "Very Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "Very Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T7", "impact": "Very Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T8", "impact": "Very Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T10", "impact": "High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T13", "impact": "Very Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC7", "Storage.FC8", "Storage.FC9"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 11, "queryable_id": 55}, "Storage.C56": {"coso": "Detective", "nist_csf": "Detect", "objective": "Storage.CO11", "retired": "false", "assured_by": "", "depends_on": "", "description": "Monitor the creation/update of storage accounts with diagnostic settings enabled (e.g. using activity logs on operation name - create or update resource diagnostic setting)", "testing": "Configure a storage account with an unauthorized diagnostic settings options, it should be detected.", "effort": "Low", "mitigate": [{"threat": "Storage.T10", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC8"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 11, "queryable_id": 56}, "Storage.C57": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO11", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify storage accounts have diagnostic settings configured according to the design (e.g. using Azure Policy \"Configure diagnostic settings for storage accounts to Log Analytics workspace\" in audit mode).", "testing": "Create a storage account with unauthorized diagnostic settings options, it should be detected.", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC2", "Storage.FC7", "Storage.FC8", "Storage.FC9"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 11, "queryable_id": 57}, "Storage.C58": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized blob and containers with public access level set to anonymous, ideally none", "testing": "Request the list of authorized blob and containers with public access level set to anonymous, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T5", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T6", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 6, "queryable_id": 58}, "Storage.C59": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "Storage.C62", "depends_on": "Storage.C58", "description": "Ensure anonymous access level is set only for authorized blobs / containers.", "testing": "Request 1) the mechanism ensuring only authorized blob / container are anonymously accessed, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "High", "mitigate": [{"threat": "Storage.T5", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T6", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 59}, "Storage.C60": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "Storage.C58", "description": "Ensure only authorized blob and containers are anonymously accessed (e.g. using Azure Policy in deny mode).", "testing": "Create a blob, or a container anonymously accessible, it should be denied.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T5", "impact": "Medium", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "High"}, {"threat": "Storage.T6", "impact": "Low", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 6, "queryable_id": 60}, "Storage.C61": {"coso": "Detective", "nist_csf": "Detect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Monitor the creation/update of blob and containers that are anonymously accessed (e.g. using Azure Automations).", "testing": "Create a blob, or a container anonymously accessible, it should be detected.", "effort": "Low", "mitigate": [{"threat": "Storage.T5", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T6", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 61}, "Storage.C62": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify only authorized blob or containers are anonymously accessible (e.g. using Azure Policy on audit mode).", "testing": "Create 1) a blob, or 2) a container anonymously accessible, it should be detected.", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 62}, "Storage.C63": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO12", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized keys for Azure storage encryption with desired assignment and rotation policy.", "testing": "Request the list of authorized keys for Azure storage encryption with desired assignment and rotation policy, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T14", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 12, "queryable_id": 63}, "Storage.C64": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO12", "retired": "false", "assured_by": "Storage.C67", "depends_on": "Storage.C63", "description": "Ensure authorized keys for Azure storage encryption with desired assignment and rotation policy is set for authorized storage accounts.", "testing": "Request 1) the mechanism ensuring only authorized keys for Azure storage encryption with desired assignment and rotation policy are in use, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "High", "mitigate": [{"threat": "Storage.T14", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 12, "queryable_id": 64}, "Storage.C65": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO12", "retired": "false", "assured_by": "", "depends_on": "Storage.C63", "description": "Ensure only authorized keys for Azure storage encryption with desired assignment and rotation policy are assigned (e.g. using Azure Policy in deny mode).", "testing": "Create a blob with unauthorized keys for Azure storage encryption, it should be denied.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T14", "impact": "Medium", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 12, "queryable_id": 65}, "Storage.C66": {"coso": "Detective", "nist_csf": "Detect", "objective": "Storage.CO12", "retired": "false", "assured_by": "", "depends_on": "", "description": "Monitor the creation/update and usage keys for Azure storage encryption with desired assignment and rotation policy assignment (e.g. using monitoring logs on authentication type in AccountKey).", "testing": "Configure a storage account with an unauthorized encryption settings, it should be detected.", "effort": "Low", "mitigate": [{"threat": "Storage.T14", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 12, "queryable_id": 66}, "Storage.C67": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO8", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify only authorized keys for Azure storage encryption with desired assignment and rotation policy are in use (e.g. using Azure Policy on audit mode).", "testing": "Configure a storage account with an unauthorized encryption settings, it should be detected.", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC1"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 8, "queryable_id": 67}, "Storage.C68": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO8", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized encryption in transit methods with desired assignment to storage accounts. Ideally minimum TLS 1.2.", "testing": "Request the list of authorized encryption in transit methods, its review process, and its review records.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T11", "impact": "Very Low", "priority": 1.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "High"}, {"threat": "Storage.T21", "impact": "Very Low", "priority": 1.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "High"}], "feature_class": ["Storage.FC1", "Storage.FC3"], "weighted_priority": "Very High", "weighted_priority_score": 4, "queryable_objective_id": 8, "queryable_id": 68}, "Storage.C69": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO8", "retired": "false", "assured_by": "Storage.C72", "depends_on": "Storage.C68", "description": "Ensure authorized encryption in transit methods with desired assignment is set for authorized storage accounts.", "testing": "Request 1) the mechanism ensuring only encryption in transit methods with desired assignment are in use, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "Low", "mitigate": [{"threat": "Storage.T11", "impact": "High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "High"}, {"threat": "Storage.T21", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}], "feature_class": ["Storage.FC1", "Storage.FC3"], "weighted_priority": "Very High", "weighted_priority_score": 4, "queryable_objective_id": 8, "queryable_id": 69}, "Storage.C70": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO8", "retired": "false", "assured_by": "", "depends_on": "Storage.C68", "description": "Ensure storage accounts have authorized encryption in transit methods configured (e.g. using Azure Policy in deny mode).", "testing": "Create a blob with unauthorized encryption in transit methods for Azure storage, it should be denied.", "effort": "Medium", "mitigate": [{"threat": "Storage.T11", "impact": "Very High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "High"}, {"threat": "Storage.T21", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}], "feature_class": ["Storage.FC1", "Storage.FC3"], "weighted_priority": "Very High", "weighted_priority_score": 4, "queryable_objective_id": 8, "queryable_id": 70}, "Storage.C71": {"coso": "Detective", "nist_csf": "Detect", "objective": "Storage.CO8", "retired": "false", "assured_by": "", "depends_on": "", "description": "Monitor the creation/update usage encryption in transit methods with desired assignment is set for authorized storage accounts (e.g. using activity logs on properties.supportsHttpsTrafficOnly scope \"supportsHttpsTrafficOnly\").", "testing": "Configure a storage account with an unauthorized encryption in transit settings, it should be detected.", "effort": "Low", "mitigate": [{"threat": "Storage.T11", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}, {"threat": "Storage.T21", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "High"}], "feature_class": ["Storage.FC1", "Storage.FC3"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 8, "queryable_id": 71}, "Storage.C72": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO8", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify only authorized encryption in transit methods with desired assignment is set for authorized storage accounts (e.g. using Azure Policy on audit mode).", "testing": "Configure a storage account with an unauthorized encryption in transit settings, it should be detected.", "effort": "Low", "mitigate": [], "feature_class": ["Storage.FC1", "Storage.FC3"], "weighted_priority": "Very High", "weighted_priority_score": 4, "queryable_objective_id": 8, "queryable_id": 72}, "Storage.C73": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO5", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized Azure storage redundancy options.", "testing": "Request the list of authorized Azure storage redundancy, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T14", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 5, "queryable_id": 73}, "Storage.C74": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO5", "retired": "false", "assured_by": "Storage.C76", "depends_on": "Storage.C73", "description": "Ensure authorized Azure storage redundancy is set for authorized storage accounts.", "testing": "Request 1) the mechanism ensuring only Azure storage redundancy for storage accounts are in use, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "High", "mitigate": [{"threat": "Storage.T14", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 5, "queryable_id": 74}, "Storage.C75": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO5", "retired": "false", "assured_by": "", "depends_on": "Storage.C73", "description": "Ensure only authorized Azure storage redundancy is set for authorized storage accounts (e.g. using Azure Policy in deny mode).", "testing": "Create a blob with unauthorized Azure storage redundancy for Azure storage, it should be denied.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T14", "impact": "Very Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 5, "queryable_id": 75}, "Storage.C76": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO5", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify only authorized Azure storage redundancy is set for authorized storage accounts (e.g. using Azure Policy on audit mode).", "testing": "Configure a storage account with an unauthorized redundancy settings, it should be detected.", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC1"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 5, "queryable_id": 76}, "Storage.C77": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO13", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized Azure storage region options.", "testing": "Request the list of authorized Azure storage region, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T14", "impact": "Very Low", "priority": 0.0, "max_dependency": 1.0, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 13, "queryable_id": 77}, "Storage.C78": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO13", "retired": "false", "assured_by": "Storage.C80", "depends_on": "Storage.C77", "description": "Ensure authorized Azure storage region is set for authorized storage accounts.", "testing": "Request 1) the mechanism ensuring only Azure storage authorized region for storage accounts are in use, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "High", "mitigate": [{"threat": "Storage.T14", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 13, "queryable_id": 78}, "Storage.C79": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO13", "retired": "false", "assured_by": "", "depends_on": "Storage.C77", "description": "Ensure only authorized Azure storage region is set for authorized storage accounts (e.g. using Azure Policy in deny mode).", "testing": "Create a storage account with unauthorized Azure storage region, it should be denied.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T14", "impact": "Very Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 13, "queryable_id": 79}, "Storage.C80": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO13", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify only authorized Azure storage region is set for authorized storage accounts (e.g. using Azure Policy on audit mode).", "testing": "Create a storage account with unauthorized Azure storage region, it should be detected.", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC1"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 13, "queryable_id": 80}, "Storage.C81": {"coso": "Corrective", "nist_csf": "Protect", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "", "description": "Integrate the access to blob, file shares, queues, tables and DFS via SAS token in the IAM Operating Model, ideally prioritising AD as preferred method.", "testing": "Check if (Azure) Active Directory is used for assigning permissions.", "effort": "Medium", "mitigate": [{"threat": "Storage.T1", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T16", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Low"}, {"threat": "Storage.T17", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T18", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T19", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T27", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T28", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC3", "Storage.FC4", "Storage.FC5", "Storage.FC7"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 1, "queryable_id": 81}, "Storage.C82": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO1", "retired": "false", "assured_by": "Storage.C83", "depends_on": "", "description": "Block the usage of storage account access key, whenever possible.", "testing": "Try to connect using storage account access keys - Expected error \"key based authentication is not permitted on this storage account\", it should be denied.", "effort": "Medium", "mitigate": [{"threat": "Storage.T1", "impact": "Very High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T2", "impact": "Very High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "High"}, {"threat": "Storage.T9", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T12", "impact": "Very High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "Medium"}, {"threat": "Storage.T16", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Low"}, {"threat": "Storage.T17", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T27", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T28", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC3", "Storage.FC4", "Storage.FC5", "Storage.FC7"], "weighted_priority": "Very High", "weighted_priority_score": 4, "queryable_objective_id": 1, "queryable_id": 82}, "Storage.C83": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify only authorized authorization method set for authorized blob, file shares, queues, tables, DFS (e.g. using Azure Policy on audit mode).", "testing": "Configure a blob, file share, queue, table, or DFS with an unauthorized authorization method, it should be detected.", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC2", "Storage.FC3", "Storage.FC4", "Storage.FC5", "Storage.FC7"], "weighted_priority": "Very High", "weighted_priority_score": 4, "queryable_objective_id": 1, "queryable_id": 83}, "Storage.C84": {"coso": "Detective", "nist_csf": "Protect", "objective": "Storage.CO11", "retired": "false", "assured_by": "", "depends_on": "", "description": "Monitor file shares quotas and trends using Azure Monitor with alarm (<a href=\"https://docs.microsoft.com/en-us/azure/storage/files/storage-files-monitoring?tabs=azure-portal#how-to-create-an-alert-if-the-azure-file-share-size-is-80-of-capacity\">e.g. Azure file share size is 80% of capacity</a>)", "testing": "Create a file with unauthorized or default quota, it should be detected.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T16", "impact": "Medium", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "Low"}], "feature_class": ["Storage.FC3"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 11, "queryable_id": 84}, "Storage.C85": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "For each file share, define the minimum retention of container and blob from the deletion (e.g. 7 days)", "testing": "For each file share, request the minimum retention from the deletion, its review process, and its review records", "effort": "High", "mitigate": [{"threat": "Storage.T18", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T19", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T20", "impact": "Very Low", "priority": 0.0, "max_dependency": 2.0, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC3"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 85}, "Storage.C86": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "Storage.C88", "depends_on": "Storage.C85", "description": "Ensure file shares have soft-delete enabled for at least the defined minimum retention", "testing": "Request 1) the mechanism ensuring file shares have soft-delete enabled for at least the defined minimum retention, 2) it's records of execution for all new file shares, and 3) plan to move any older file shares", "effort": "Low", "mitigate": [{"threat": "Storage.T18", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}, {"threat": "Storage.T19", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T20", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC3"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 86}, "Storage.C87": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "Storage.C85", "description": "Prevent the creation of file shares without soft-delete (e.g. by using an Azure Policy in deny mode).", "testing": "Create a file share without soft-delete, it should be denied", "effort": "High", "mitigate": [{"threat": "Storage.T18", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}, {"threat": "Storage.T19", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T20", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC3"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 6, "queryable_id": 87}, "Storage.C88": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify all file shares have soft-delete (e.g. by using an Azure Policy in audit mode).", "testing": "Create a file share without soft-delete , it should be detected.", "effort": "Low", "mitigate": [], "feature_class": ["Storage.FC3"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 88}, "Storage.C89": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a revocation plan for any SAS or storage account access keys that you issue to clients based on requirements. If a SAS is compromised, you need to revoke that SAS as soon as possible. To revoke a user delegation SAS, revoke the user delegation key to quickly invalidate all signatures associated with that key. To revoke a service SAS that is associated with a stored access policy, you can delete the stored access policy, rename the policy, or change its expiry time to a time that is in the past (<a href=\"https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview#best-practices-when-using-sas\">ref</a>).", "testing": "Request the of authorized revocation plan for any SAS or storage account access keys, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T1", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T2", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T16", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "Low"}], "feature_class": ["Storage.FC3", "Storage.FC7"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 1, "queryable_id": 89}, "Storage.C90": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO1", "retired": "false", "assured_by": "Storage.C91", "depends_on": "Storage.C89", "description": "Ensure the revocation plan is in place for any SAS or storage account access key.", "testing": "Request 1) the mechanism ensuring revocation plan in place for any SAS or storage account access keys is in use, 2) its records of testing for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "High", "mitigate": [{"threat": "Storage.T1", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T2", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T16", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Low"}], "feature_class": ["Storage.FC3", "Storage.FC7"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 1, "queryable_id": 90}, "Storage.C91": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO1", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify the revocation plan is in place for any SAS or storage account access key.", "testing": "Check test executions. Any unsuccessful attempts, it should be detected", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC3", "Storage.FC7"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 1, "queryable_id": 91}, "Storage.C92": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO10", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized storage accounts has static website hosting option enabled, ideally none", "testing": "Request the list of authorized storage accounts with static website hosting option enabled, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T22", "impact": "Very Low", "priority": 0.0, "max_dependency": 3.0, "priority_overall": 3.0, "cvss": "High"}], "feature_class": ["Storage.FC2"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 10, "queryable_id": 92}, "Storage.C93": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO4", "retired": "false", "assured_by": "Storage.C95", "depends_on": "Storage.C92", "description": "Ensure only authorized storage accounts has the static website hosting option enabled.", "testing": "Request 1) the mechanism ensuring only authorized storage accounts has static website hosting option enabled, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "High", "mitigate": [{"threat": "Storage.T22", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 4, "queryable_id": 93}, "Storage.C94": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO4", "retired": "false", "assured_by": "", "depends_on": "Storage.C92", "description": "Prevent unauthorized storage accounts to have the static website hosting option enabled (e.g. using Azure Policy on deny mode).", "testing": "Create a storage account with a static website hosting option enabled, it should be denied.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T22", "impact": "Medium", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "High"}], "feature_class": ["Storage.FC2"], "weighted_priority": "High", "weighted_priority_score": 3, "queryable_objective_id": 4, "queryable_id": 94}, "Storage.C95": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO4", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify only authorized storage accounts has the static website hosting option enabled (e.g. using Azure Policy on audit mode).", "testing": "Create a storage account with a static website hosting option enabled, it should be detected.", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 4, "queryable_id": 95}, "Storage.C96": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO14", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized CORS per endpoint trusted origins and corresponding settings.", "testing": "Request the list of authorized storage accounts with CORS trusted origins and corresponding settings, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T26", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 14, "queryable_id": 96}, "Storage.C97": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO14", "retired": "false", "assured_by": "Storage.C99", "depends_on": "Storage.C96", "description": "Ensure only authorized storage accounts have CORS trusted origins and corresponding settings configured.", "testing": "Request 1) the mechanism ensuring only authorized storage accounts have CORS trusted origins and corresponding settings configured, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "High", "mitigate": [{"threat": "Storage.T26", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 14, "queryable_id": 97}, "Storage.C98": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO14", "retired": "false", "assured_by": "", "depends_on": "Storage.C96", "description": "Prevent unauthorized storage accounts to use CORS trusted origins and corresponding settings (e.g. using Azure Policy in deny mode).", "testing": "Create a storage account with untrusted CORS settings, it should be denied.", "effort": "High", "mitigate": [{"threat": "Storage.T26", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC1"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 14, "queryable_id": 98}, "Storage.C99": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO14", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify only authorized CORS trusted origins and corresponding settings are configured (e.g. using Azure Policy on audit mode).", "testing": "Create a storage account with untrusted CORS settings, it should be detected.", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC1"], "weighted_priority": "Very Low", "weighted_priority_score": 0, "queryable_objective_id": 14, "queryable_id": 99}, "Storage.C100": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO8", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized SMB 2.1 Azure Files.", "testing": "Request the list of authorized SMB 2.1 Azure Files with SMB 2.1 settings, its review process, and its review records.", "effort": "Low", "mitigate": [{"threat": "Storage.T21", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "High"}], "feature_class": ["Storage.FC3"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 8, "queryable_id": 100}, "Storage.C101": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO8", "retired": "false", "assured_by": "Storage.C104", "depends_on": "Storage.C100", "description": "Ensure only authorized Azure Files SMB 2.1 have encryption disabled.", "testing": "Request 1) the mechanism ensuring only authorized SMB 2.1 Azure Files have encryption disabled, 2) its records of execution for all new SMB 2.1 Azure Files, and 3) plan to move any older storage accounts", "effort": "High", "mitigate": [{"threat": "Storage.T21", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}], "feature_class": ["Storage.FC3"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 8, "queryable_id": 101}, "Storage.C102": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO8", "retired": "false", "assured_by": "", "depends_on": "Storage.C100", "description": "Prevent unauthorized Azure Files SMB 2.1 to have encryption disabled (e.g. using Azure Policy in deny mode).", "testing": "Create a storage account with encryption disabled, it should be denied.", "effort": "High", "mitigate": [{"threat": "Storage.T21", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}], "feature_class": ["Storage.FC3"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 8, "queryable_id": 102}, "Storage.C103": {"coso": "Detective", "nist_csf": "Detect", "objective": "Storage.CO8", "retired": "false", "assured_by": "", "depends_on": "", "description": "Monitor the creation/update of Azure Files SMB 2.1 and corresponding settings (e.g. using activity logs on properties.supportsHttpsTrafficOnly scope \"supportsHttpsTrafficOnly\").", "testing": "Create a storage account with encryption disabled, it should be detected.", "effort": "High", "mitigate": [{"threat": "Storage.T21", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}], "feature_class": ["Storage.FC3"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 8, "queryable_id": 103}, "Storage.C104": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO8", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify only authorized Azure Files SMB 2.1 and corresponding settings are configured (e.g. using Azure Policy on audit mode).", "testing": "Create a storage account with encryption disabled, it should be detected.", "effort": "High", "mitigate": [], "feature_class": ["Storage.FC3"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 8, "queryable_id": 104}, "Storage.C105": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "Storage.C107", "depends_on": "", "description": "Ensure storage accounts have Azure Defender for Storage account enabled\" with \"Ensure storage accounts have Azure Defender for storage account enabled", "testing": "Request 1) the mechanism ensuring storage accounts have Azure Defender for storage account enabled, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "High", "mitigate": [{"threat": "Storage.T2", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T20", "impact": "Very Low", "priority": 0.0, "max_dependency": 0.0, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC3", "Storage.FC7"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 6, "queryable_id": 105}, "Storage.C106": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Prevent the creation of storage accounts without Azure Defender for storage account option (e.g. by using an Azure Policy \"Microsoft.storage/storageaccounts/deleteRetentionPolicy\" in deny mode).", "testing": "Create a storage account without Azure Defender for storage account, it should be denied", "effort": "High", "mitigate": [{"threat": "Storage.T2", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T20", "impact": "Medium", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC3", "Storage.FC7"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 6, "queryable_id": 106}, "Storage.C107": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify all storage accounts have Azure Defender for storage account enabled", "testing": "Create a storage account without Azure Defender for storage account option, it should be detected.", "effort": "Low", "mitigate": [], "feature_class": ["Storage.FC2", "Storage.FC3", "Storage.FC7"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 6, "queryable_id": 107}, "Storage.C108": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "Storage.C110", "depends_on": "", "description": "Ensure storage accounts have Azure Defender enabled", "testing": "Request 1) the mechanism ensuring storage accounts have Azure Defender for storage account enabled, 2) its records of execution for all new storage accounts, and 3) plan to move any older storage accounts", "effort": "Medium", "mitigate": [{"threat": "Storage.T2", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "Low", "priority": 1.0, "max_dependency": null, "priority_overall": 1.0, "cvss": "High"}, {"threat": "Storage.T20", "impact": "Medium", "priority": 2.0, "max_dependency": null, "priority_overall": 2.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC3", "Storage.FC7"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 108}, "Storage.C109": {"coso": "Preventative", "nist_csf": "Protect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "Storage.C105", "description": "Prevent the creation of storage accounts without Azure Defender (e.g. by using an Azure Policy in deny mode).", "testing": "Create a storage account without Azure Defender for storage account, it should be denied.", "effort": "High", "mitigate": [{"threat": "Storage.T2", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}, {"threat": "Storage.T3", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T5", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "High"}, {"threat": "Storage.T20", "impact": "Very Low", "priority": 0.0, "max_dependency": null, "priority_overall": 0.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2", "Storage.FC3", "Storage.FC7"], "weighted_priority": "Low", "weighted_priority_score": 1, "queryable_objective_id": 6, "queryable_id": 109}, "Storage.C110": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO6", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify storage accounts without Azure Defender for storage account enabled.", "testing": "Create a storage account without Azure Defender for storage account, it should be detected.", "effort": "Low", "mitigate": [], "feature_class": ["Storage.FC2", "Storage.FC3", "Storage.FC7"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 6, "queryable_id": 110}, "Storage.C111": {"coso": "Directive", "nist_csf": "Identify", "objective": "Storage.CO5", "retired": "false", "assured_by": "", "depends_on": "", "description": "Maintain a list of authorized storage and corresponding accounts locks.", "testing": "Request the list of authorized storage accounts locks settings, its review process, and its review records.", "effort": "Very Low", "mitigate": [{"threat": "Storage.T5", "impact": "Very Low", "priority": 1.0, "max_dependency": 4.0, "priority_overall": 4.0, "cvss": "High"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Very High", "weighted_priority_score": 4, "queryable_objective_id": 5, "queryable_id": 111}, "Storage.C112": {"coso": "Directive", "nist_csf": "Protect", "objective": "Storage.CO5", "retired": "false", "assured_by": "Storage.C113", "depends_on": "Storage.C111", "description": "Lock storage account to prevent accidental or malicious deletion or configuration changes and ensure only authorized storage accounts have lock disabled.", "testing": "Request 1) the mechanism ensuring only authorized storage accounts have locks disabled, 2) its records of execution for all new storage accounts locks, and 3) plan to move any older storage accounts", "effort": "Very Low", "mitigate": [{"threat": "Storage.T5", "impact": "High", "priority": 4.0, "max_dependency": null, "priority_overall": 4.0, "cvss": "High"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Very High", "weighted_priority_score": 4, "queryable_objective_id": 5, "queryable_id": 112}, "Storage.C113": {"coso": "Assurance", "nist_csf": "Detect", "objective": "Storage.CO5", "retired": "false", "assured_by": "", "depends_on": "", "description": "Verify the creation/update of storage accounts lock and corresponding settings (e.g. using activity logs \"localized Value\": \"Delete management locks\").", "testing": "Delete a storage account lock, it should be detected.", "effort": "Very Low", "mitigate": [], "feature_class": ["Storage.FC2"], "weighted_priority": "Very High", "weighted_priority_score": 4, "queryable_objective_id": 5, "queryable_id": 113}, "Storage.C114": {"coso": "Preventative", "nist_csf": "Detect", "objective": "Storage.CO15", "retired": "false", "assured_by": "", "depends_on": "", "description": "If the storage account is used as an input or the output of a process, scan the objects for malware (e.g. using VirusScan)", "testing": "Inject a malware test file, it should be denied.", "effort": "High", "mitigate": [{"threat": "Storage.T12", "impact": "Very High", "priority": 3.0, "max_dependency": null, "priority_overall": 3.0, "cvss": "Medium"}], "feature_class": ["Storage.FC2"], "weighted_priority": "Medium", "weighted_priority_score": 2, "queryable_objective_id": 15, "queryable_id": 114}}, "actions": {"Storage.A1": {"action_description": "Registers the subscription for the storage resource provider and enables the creation of storage accounts.", "api": "OperationsList", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/register/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 1}, "Storage.A2": {"action_description": "Notifies Azure Storage that virtual network or subnet is being deleted", "api": "NotifiesAzureStorageThatVirtualNetworkOrSubnetIsBeingDeleted", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/locations/deleteVirtualNetworkOrSubnets/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 2}, "Storage.A3": {"action_description": "List blob services", "api": "Listblobs", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 3}, "Storage.A4": {"action_description": "Returns a user delegation key for the blob service", "api": "ReturnsAUserDelegationKeyForTheblobService", "endpoint": "storage", "feature_class": "Storage.FC7", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/generateUserDelegationKey/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 4}, "Storage.A5": {"action_description": "Returns the result of put blob service properties", "api": "GetblobProperties", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 5}, "Storage.A6": {"action_description": "Returns blob service properties or statistics", "api": "SetblobServiceProperties", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 6}, "Storage.A7": {"action_description": "Returns a blob or a list of blobs", "api": "Listblobs", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 7}, "Storage.A8": {"action_description": "Returns the result of writing a blob", "api": "ReturnsTheResultOfWritingAblob", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 8}, "Storage.A9": {"action_description": "Returns the result of deleting a blob", "api": "ReturnsTheResultOfDeletingAblob", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 9}, "Storage.A10": {"action_description": "Returns the result of deleting a blob version", "api": "DeleteblobVersions", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/deleteblobVersion/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 10}, "Storage.A11": {"action_description": "Delete a version of a blob.", "api": "DataactionForDeletingAVersionOfAblob", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/permanentDelete/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 11}, "Storage.A12": {"action_description": "Returns the result of adding blob content", "api": "AddblobContent", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/add/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 12}, "Storage.A13": {"action_description": "Returns the list of blobs under an account with matching tags filter", "api": "ReturnsTheListOfblobsUnderAnAccountWithMatchingTagsFilter", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/filter/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 13}, "Storage.A14": {"action_description": "Moves the blob from one path to another", "api": "Moveblobs", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/move/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 14}, "Storage.A15": {"action_description": "Changes ownership of the blob", "api": "ManageblobOwnership", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/manageOwnership/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 15}, "Storage.A16": {"action_description": "Modifies permissions of the blob", "api": "ModifyblobPermissions", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/modifyPermissions/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 16}, "Storage.A17": {"action_description": "Returns the result of the blob command", "api": "ReturnsTheResultOfTheblobCommand", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/runAsSuperUser/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 17}, "Storage.A18": {"action_description": "Migrate", "api": "Migrate", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/migrate/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 18}, "Storage.A19": {"action_description": "Returns the result of patch blob container", "api": "PathblobContainer", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 19}, "Storage.A20": {"action_description": "Returns the result of deleting a container", "api": "DeleteblobContainer", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 20}, "Storage.A21": {"action_description": "Returns a container", "api": "GetblobContainer", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 21}, "Storage.A22": {"action_description": "Returns list of containers", "api": "ReturnsListOfContainers", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 22}, "Storage.A23": {"action_description": "Returns the result of leasing blob container", "api": "ReturnsTheResultOfLeasingblobContainer", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/lease/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 23}, "Storage.A24": {"action_description": "Returns the result of put blob container", "api": "ReturnsTheResultOfPutblobContainer", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 24}, "Storage.A25": {"action_description": "Clear blob container legal hold", "api": "ClearblobContainerLegalHold", "endpoint": "storage", "feature_class": "Storage.FC6", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/clearLegalHold/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 25}, "Storage.A26": {"action_description": "Set blob container legal hold", "api": "SetblobContainerLegalHold", "endpoint": "storage", "feature_class": "Storage.FC6", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/setLegalHold/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 26}, "Storage.A27": {"action_description": "Extend blob container immutability policy", "api": "ExtendblobContainerImmutabilityPolicy", "endpoint": "storage", "feature_class": "Storage.FC6", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies/extend/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 27}, "Storage.A28": {"action_description": "Delete blob container immutability policy", "api": "DeleteblobContainerImmutabilityPolicy", "endpoint": "storage", "feature_class": "Storage.FC6", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 28}, "Storage.A29": {"action_description": "Put blob container immutability policy", "api": "PutblobContainerImmutabilityPolicy", "endpoint": "storage", "feature_class": "Storage.FC6", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 29}, "Storage.A30": {"action_description": "Lock blob container immutability policy", "api": "LockblobContainerImmutabilityPolicy", "endpoint": "storage", "feature_class": "Storage.FC6", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies/lock/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 30}, "Storage.A31": {"action_description": "Get blob container immutability policy", "api": "GetblobContainerImmutabilityPolicy", "endpoint": "storage", "feature_class": "Storage.FC6", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 31}, "Storage.A32": {"action_description": "Get queue service properties", "api": "GetqueueServiceProperties", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 32}, "Storage.A33": {"action_description": "Returns queue service properties or statistics.", "api": "ReturnsqueueServicePropertiesOrStatistics.", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 33}, "Storage.A34": {"action_description": "Returns the result of setting queue service properties", "api": "ReturnsTheResultOfSettingqueueServiceProperties", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 34}, "Storage.A35": {"action_description": "Create a queue", "api": "CreateAqueue", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/queues/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 35}, "Storage.A36": {"action_description": "Returns a queue or a list of queues.", "api": "ReturnsAqueueOrAListOfqueues.", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/queues/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 36}, "Storage.A37": {"action_description": "Returns the result of writing a queue", "api": "ReturnsTheResultOfWritingAqueue", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/queues/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 37}, "Storage.A38": {"action_description": "Returns the result of deleting a queue", "api": "ReturnsTheResultOfDeletingAqueue", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/queues/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 38}, "Storage.A39": {"action_description": "Returns a message", "api": "ReturnsAMessage", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/queues/messages/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 39}, "Storage.A40": {"action_description": "Returns the result of writing a message", "api": "ReturnsTheResultOfWritingAMessage", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/queues/messages/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 40}, "Storage.A41": {"action_description": "Returns the result of deleting a message", "api": "ReturnsTheResultOfDeletingAMessage", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/queues/messages/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 41}, "Storage.A42": {"action_description": "Returns the result of adding a message", "api": "ReturnsTheResultOfAddingAMessage", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/queues/messages/add/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 42}, "Storage.A43": {"action_description": "Returns the result of processing a message", "api": "ReturnsTheResultOfProcessingAMessage", "endpoint": "storage", "feature_class": "Storage.FC4", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/queues/messages/process/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 43}, "Storage.A44": {"action_description": "Update internal properties", "api": "UpdateInternalProperties", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/updateInternalProperties/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 44}, "Storage.A45": {"action_description": "Customer is able to abort an ongoing hierarchical namespace migration on the storage account", "api": "CustomerIsAbleToAbortAnOngoingHierarchicalNamespaceMigrationOnTheStorageAccount", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/hnsonmigration/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 45}, "Storage.A46": {"action_description": "Customer is able to migrate to hierarchical namespace account type", "api": "CustomerIsAbleToMigrateToHierarchicalNamespaceAccountType", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/hnsonmigration/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 46}, "Storage.A47": {"action_description": "Restore blob ranges to the state of the specified time", "api": "RestoreblobRangesToTheStateOfTheSpecifiedTime", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/restoreblobRanges/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 47}, "Storage.A48": {"action_description": "Approve private endpoint Connections", "api": "ApprovePrivateEndpointConnections", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/PrivateEndpointConnectionsApproval/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 48}, "Storage.A49": {"action_description": "Customer is able to control the failover in case of availability issues", "api": "CustomerIsAbleToControlTheFailoverInCaseOfAvailabilityIssues", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/failover/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 49}, "Storage.A50": {"action_description": "Returns the access keys for the specified storage account.", "api": "ReturnsTheAccessKeysForTheSpecifiedStorageAccount.", "endpoint": "storage", "feature_class": "Storage.FC7", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/listkeys/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 50}, "Storage.A51": {"action_description": "Regenerates the access keys for the specified storage account.", "api": "RegeneratesTheAccessKeysForTheSpecifiedStorageAccount.", "endpoint": "storage", "feature_class": "Storage.FC7", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/regeneratekey/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 51}, "Storage.A52": {"action_description": "Rotate key", "api": "RotateKey", "endpoint": "storage", "feature_class": "Storage.FC7", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/rotateKey/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 52}, "Storage.A53": {"action_description": "Revokes all the user delegation keys for the specified storage account.", "api": "RevokesAllTheUserDelegationKeysForTheSpecifiedStorageAccount.", "endpoint": "storage", "feature_class": "Storage.FC7", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/revokeUserDelegationKeys/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 53}, "Storage.A54": {"action_description": "Deletes an existing storage account.", "api": "DeletesAnExistingStorageAccount.", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 54}, "Storage.A55": {"action_description": "Returns the list of storage accounts or gets the properties for the specified storage account.", "api": "ReturnsTheListOfStorageAccountsOrGetsThePropertiesForTheSpecifiedStorageAccount.", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 55}, "Storage.A56": {"action_description": "Returns the account SAS token for the specified storage account.", "api": "ReturnsTheAccountSASTokenForTheSpecifiedStorageAccount.", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/listAccountSas/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 56}, "Storage.A57": {"action_description": "Returns the service SAS token for the specified storage account.", "api": "ReturnsTheServiceSASTokenForTheSpecifiedStorageAccount.", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/listServiceSas/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 57}, "Storage.A58": {"action_description": "Creates a storage account with the specified parameters, updates the properties or tags, or adds a custom domain for the specified storage account.", "api": "CreatesAStorageAccountWithTheSpecifiedParametersOrUpdateThePropertiesOrTagsOrAddsCustomDomainForTheSpecifiedStorageAccount.", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 58}, "Storage.A59": {"action_description": "Create/update storage account diagnostic settings.", "api": "Create/UpdateStorageAccountDiagnosticSettings.", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/services/diagnosticsettings/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 59}, "Storage.A60": {"action_description": "Get list of Azure Storage metrics definitions.", "api": "GetListOfAzureStorageMetricsDefinitions.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/providers/Microsoft.Insights/metricDefinitions/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 60}, "Storage.A61": {"action_description": "Gets the diagnostic setting for the resource.", "api": "GetsTheDiagnosticSettingForTheResource.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/providers/Microsoft.Insights/diagnosticsettings/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 61}, "Storage.A62": {"action_description": "Creates or updates the diagnostic setting for the resource.", "api": "CreatesOrUpdatesTheDiagnosticSettingForTheResource.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/providers/Microsoft.Insights/diagnosticsettings/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 62}, "Storage.A63": {"action_description": "Get list of Azure Storage metrics definitions.", "api": "GetListOfAzureStorageMetricsDefinitions.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/providers/Microsoft.Insights/metricDefinitions/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 63}, "Storage.A64": {"action_description": "Gets the diagnostic setting for the resource.", "api": "GetsTheDiagnosticSettingForTheResource.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/providers/Microsoft.Insights/diagnosticsettings/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 64}, "Storage.A65": {"action_description": "Creates or updates the diagnostic setting for the resource.", "api": "CreatesOrUpdatesTheDiagnosticSettingForTheResource.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/providers/Microsoft.Insights/diagnosticsettings/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 65}, "Storage.A66": {"action_description": "Get list of Azure Storage metrics definitions.", "api": "GetListOfAzureStorageMetricsDefinitions.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/providers/Microsoft.Insights/metricDefinitions/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 66}, "Storage.A67": {"action_description": "Gets the diagnostic setting for the resource.", "api": "GetsTheDiagnosticSettingForTheResource.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/providers/Microsoft.Insights/diagnosticsettings/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 67}, "Storage.A68": {"action_description": "Creates or updates the diagnostic setting for the resource.", "api": "CreatesOrUpdatesTheDiagnosticSettingForTheResource.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/providers/Microsoft.Insights/diagnosticsettings/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 68}, "Storage.A69": {"action_description": "Get list of Azure Storage metrics definitions.", "api": "GetListOfAzureStorageMetricsDefinitions.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/providers/Microsoft.Insights/metricDefinitions/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 69}, "Storage.A70": {"action_description": "Gets the diagnostic setting for the resource.", "api": "GetsTheDiagnosticSettingForTheResource.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/providers/Microsoft.Insights/diagnosticsettings/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 70}, "Storage.A71": {"action_description": "Creates or updates the diagnostic setting for the resource.", "api": "CreatesOrUpdatesTheDiagnosticSettingForTheResource.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/providers/Microsoft.Insights/diagnosticsettings/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 71}, "Storage.A72": {"action_description": "Get list of Azure Storage metrics definitions.", "api": "GetListOfAzureStorageMetricsDefinitions.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/providers/Microsoft.Insights/metricDefinitions/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 72}, "Storage.A73": {"action_description": "Gets the diagnostic setting for the resource.", "api": "GetsTheDiagnosticSettingForTheResource.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/providers/Microsoft.Insights/diagnosticsettings/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 73}, "Storage.A74": {"action_description": "Creates or updates the diagnostic setting for the resource.", "api": "CreatesOrUpdatesTheDiagnosticSettingForTheResource.", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/providers/Microsoft.Insights/diagnosticsettings/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 74}, "Storage.A75": {"action_description": "Gets the log definition for table", "api": "GetsTheLogDefinitionForTable", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/providers/Microsoft.Insights/logDefinitions/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 75}, "Storage.A76": {"action_description": "Gets the log definition for blob", "api": "GetsTheLogDefinitionForblob", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/providers/Microsoft.Insights/logDefinitions/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 76}, "Storage.A77": {"action_description": "Gets the log definition for file", "api": "GetsTheLogDefinitionForFile", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/providers/Microsoft.Insights/logDefinitions/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 77}, "Storage.A78": {"action_description": "Gets the log definition for queue", "api": "GetsTheLogDefinitionForqueue", "endpoint": "storage", "feature_class": "Storage.FC8", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/queueServices/providers/Microsoft.Insights/logDefinitions/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 78}, "Storage.A79": {"action_description": "Lists the SKUs supported by Azure Storage", "api": "ListsTheSkusSupportedByAzureStorage", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/skus/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 79}, "Storage.A80": {"action_description": "Polls the status of an asynchronous operation", "api": "PollsTheStatusOfAnAsynchronousOperation", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/operations/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 80}, "Storage.A81": {"action_description": "Checks that account name is valid and is not in use.", "api": "ChecksThatAccountNameIsValidAndIsNotInUse.", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/checknameavailability/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 81}, "Storage.A82": {"action_description": "Returns the limit and the current usage count for resources in the specified subscription", "api": "ReturnsTheLimitAndTheCurrentUsageCountForResourcesInTheSpecifiedSubscription", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/locations/usages/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 82}, "Storage.A83": {"action_description": "Returns the limit and the current usage count for resources in the specified subscription", "api": "ReturnsTheLimitAndTheCurrentUsageCountForResourcesInTheSpecifiedSubscription", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/usages/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 83}, "Storage.A84": {"action_description": "Returns the result of reading blob tags", "api": "ReturnsTheResultOfReadingblobTags", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/tags/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 84}, "Storage.A85": {"action_description": "Returns the result of writing blob tags", "api": "ReturnsTheResultOfWritingblobTags", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/tags/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 85}, "Storage.A86": {"action_description": "Delete storage account management policies", "api": "DeleteStorageAccountManagementPolicies", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/managementPolicies/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 86}, "Storage.A87": {"action_description": "Get storage management account policies", "api": "GetStorageManagementAccountPolicies", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/managementPolicies/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 87}, "Storage.A88": {"action_description": "Put storage account management policies", "api": "PutStorageAccountManagementPolicies", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/managementPolicies/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 88}, "Storage.A89": {"action_description": "Restore file share", "api": "RestoreFileShare", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/shares/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 89}, "Storage.A90": {"action_description": "List file services", "api": "ListFileServices", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 90}, "Storage.A91": {"action_description": "Put file service properties", "api": "PutFileServiceProperties", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 91}, "Storage.A92": {"action_description": "Get file service properties", "api": "GetFileServiceProperties", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 92}, "Storage.A93": {"action_description": "Get table service properties", "api": "GetTableServiceProperties", "endpoint": "storage", "feature_class": "Storage.FC5", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 93}, "Storage.A94": {"action_description": "Get table service properties or statistics", "api": "GetTableServicePropertiesOrStatistics", "endpoint": "storage", "feature_class": "Storage.FC5", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 94}, "Storage.A95": {"action_description": "Set table service properties", "api": "SetTableServiceProperties", "endpoint": "storage", "feature_class": "Storage.FC5", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 95}, "Storage.A96": {"action_description": "Returns a file/folder or a list of files/folders", "api": "ReturnsAFile/FolderOrAListOfFiles/Folders", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/fileshares/files/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 96}, "Storage.A97": {"action_description": "Returns the result of writing a file or creating a folder", "api": "ReturnsTheResultOfWritingAFileOrCreatingAFolder", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/fileshares/files/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 97}, "Storage.A98": {"action_description": "Returns the result of deleting a file/folder", "api": "ReturnsTheResultOfDeletingAFile/Folder", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/fileshares/files/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 98}, "Storage.A99": {"action_description": "Returns the result of modifying permission on a file/folder", "api": "ReturnsTheResultOfModifyingPermissionOnAFile/Folder", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/fileshares/files/modifypermissions/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 99}, "Storage.A100": {"action_description": "Get file admin privileges", "api": "GetFileAdminPrivileges", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/fileshares/files/actassuperuser/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 100}, "Storage.A101": {"action_description": "Get private endpoint Connection Proxy", "api": "GetPrivateEndpointConnectionProxy", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/privateEndpointConnectionProxies/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 101}, "Storage.A102": {"action_description": "Delete private endpoint Connection Proxies", "api": "DeletePrivateEndpointConnectionProxies", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/privateEndpointConnectionProxies/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 102}, "Storage.A103": {"action_description": "Put private endpoint Connection Proxies", "api": "PutPrivateEndpointConnectionProxies", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/privateEndpointConnectionProxies/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 103}, "Storage.A104": {"action_description": "List private endpoint Connections", "api": "ListPrivateEndpointConnections", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/privateEndpointConnections/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 104}, "Storage.A105": {"action_description": "Delete private endpoint Connection", "api": "DeletePrivateEndpointConnection", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/privateEndpointConnections/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 105}, "Storage.A106": {"action_description": "Get private endpoint Connection", "api": "GetPrivateEndpointConnection", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/privateEndpointConnections/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 106}, "Storage.A107": {"action_description": "Put private endpoint Connection", "api": "PutPrivateEndpointConnection", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/privateEndpointConnections/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 107}, "Storage.A108": {"action_description": "Get StorageAccount groupids", "api": "GetStorageaccountGroupids", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/privateLinkResources/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 108}, "Storage.A109": {"action_description": "Checks that account name is valid and is not in use.", "api": "ChecksThatAccountNameIsValidAndIsNotInUse.", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/locations/checknameavailability/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 109}, "Storage.A110": {"action_description": "Delete file share", "api": "DeleteFileShare", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/shares/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 110}, "Storage.A111": {"action_description": "Get file share", "api": "GetFileShare", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/shares/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 111}, "Storage.A112": {"action_description": "List file shares", "api": "ListFileShares", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/shares/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 112}, "Storage.A113": {"action_description": "Create or update file share", "api": "CreateOrUpdateFileShare", "endpoint": "storage", "feature_class": "Storage.FC3", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/fileServices/shares/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 113}, "Storage.A114": {"action_description": "Encryption", "api": "Encryption", "endpoint": "storage", "feature_class": "Storage.FC9", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/encryptionScopes/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 114}, "Storage.A115": {"action_description": "Encryption", "api": "Encryption", "endpoint": "storage", "feature_class": "Storage.FC9", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/encryptionScopes/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 115}, "Storage.A116": {"action_description": "Delete object replication policy", "api": "DeleteObjectReplicationPolicy", "endpoint": "storage", "feature_class": "Storage.FC9", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/objectReplicationPolicies/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 116}, "Storage.A117": {"action_description": "Get object replication policy", "api": "GetObjectReplicationPolicy", "endpoint": "storage", "feature_class": "Storage.FC9", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/objectReplicationPolicies/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 117}, "Storage.A118": {"action_description": "List object replication policies", "api": "ListObjectReplicationPolicies", "endpoint": "storage", "feature_class": "Storage.FC9", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/objectReplicationPolicies/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 118}, "Storage.A119": {"action_description": "Create or update object replication policy", "api": "CreateOrUpdateObjectReplicationPolicy", "endpoint": "storage", "feature_class": "Storage.FC9", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/objectReplicationPolicies/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 119}, "Storage.A120": {"action_description": "Share policy", "api": "SharePolicy", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/dataSharePolicies/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 120}, "Storage.A121": {"action_description": "Share policy", "api": "SharePolicy", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/dataSharePolicies/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 121}, "Storage.A122": {"action_description": "Share policy", "api": "SharePolicy", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/dataSharePolicies/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 122}, "Storage.A123": {"action_description": "Delete local user", "api": "DeleteLocalUser", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/localUsers/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 123}, "Storage.A124": {"action_description": "TODO", "api": "TODO", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/localusers/regeneratePassword/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 124}, "Storage.A125": {"action_description": "List local user keys", "api": "ListLocalUserKeys", "endpoint": "storage", "feature_class": "Storage.FC7", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/localusers/listKeys/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 125}, "Storage.A126": {"action_description": "List local users", "api": "ListLocalUsers", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/localusers/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 126}, "Storage.A127": {"action_description": "Get local user", "api": "GetLocalUser", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/localusers/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 127}, "Storage.A128": {"action_description": "Create or update local user", "api": "CreateOrUpdateLocalUser", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/localusers/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 128}, "Storage.A129": {"action_description": "Query tables", "api": "QueryTables", "endpoint": "storage", "feature_class": "Storage.FC5", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/tables/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 129}, "Storage.A130": {"action_description": "Create tables", "api": "CreateTables", "endpoint": "storage", "feature_class": "Storage.FC5", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/tables/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 130}, "Storage.A131": {"action_description": "Delete tables", "api": "DeleteTables", "endpoint": "storage", "feature_class": "Storage.FC5", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/tables/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 131}, "Storage.A132": {"action_description": "Policies read", "api": "PoliciesRead", "endpoint": "storage", "feature_class": "Storage.FC10", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/inventoryPolicies/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 132}, "Storage.A133": {"action_description": "TODO", "api": "TODO", "endpoint": "storage", "feature_class": "Storage.FC10", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/inventoryPolicies/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 133}, "Storage.A134": {"action_description": "Policies write", "api": "PoliciesWrite", "endpoint": "storage", "feature_class": "Storage.FC10", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/inventoryPolicies/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 134}, "Storage.A135": {"action_description": "Delete lock", "api": "DeleteLock", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/accountLocks/deleteLock/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 135}, "Storage.A136": {"action_description": "Lock read", "api": "LockRead", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/accountLocks/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 136}, "Storage.A137": {"action_description": "Lock write", "api": "LockWrite", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/accountLocks/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 137}, "Storage.A138": {"action_description": "Lock delete", "api": "LockDelete", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/accountLocks/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 138}, "Storage.A139": {"action_description": "Data share policy read", "api": "DataSharePolicyRead", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/consumerdataSharePolicies/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 139}, "Storage.A140": {"action_description": "Data share policy write", "api": "DataSharePolicyWrite", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/consumerdataSharePolicies/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 140}, "Storage.A141": {"action_description": "Query table entities", "api": "QueryTableEntities", "endpoint": "storage", "feature_class": "Storage.FC5", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/tables/entities/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 141}, "Storage.A142": {"action_description": "Insert, merge, or replace table entities", "api": "Insert,Merge,OrReplaceTableEntities", "endpoint": "storage", "feature_class": "Storage.FC5", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/tables/entities/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 142}, "Storage.A143": {"action_description": "Delete table entities", "api": "DeleteTableEntities", "endpoint": "storage", "feature_class": "Storage.FC5", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/tables/entities/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 143}, "Storage.A144": {"action_description": "Insert table entities", "api": "InsertTableEntities", "endpoint": "storage", "feature_class": "Storage.FC5", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/tables/entities/add/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 144}, "Storage.A145": {"action_description": "Merge or update table entities", "api": "MergeOrUpdateTableEntities", "endpoint": "storage", "feature_class": "Storage.FC5", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/tableServices/tables/entities/update/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 145}, "Storage.A146": {"action_description": "Run as Super user", "api": "RunAsSuperUser", "endpoint": "storage", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/immutableStorage/runAsSuperUser/action", "event_name": "TODO", "stage": "TBD", "action_id_int": 146}, "Storage.A147": {"action_description": "Point markers", "api": "PointMarkers", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/objectReplicationPolicies/restorePointMarkers/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 147}, "Storage.A148": {"action_description": "Restore point delete", "api": "RestorePointDelete", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/restorePoints/delete", "event_name": "TODO", "stage": "TBD", "action_id_int": 148}, "Storage.A149": {"action_description": "Restore point read", "api": "RestorePointRead", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/restorePoints/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 149}, "Storage.A150": {"action_description": "Blob service read", "api": "blobServiceRead", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/restorePoints/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 150}, "Storage.A151": {"action_description": "Blob service write", "api": "blobServiceWrite", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/accountMigrations/read", "event_name": "TODO", "stage": "TBD", "action_id_int": 151}, "Storage.A152": {"action_description": "Manage storage account migration to enable hierarchical namespace.", "api": "ContainerRead", "endpoint": "storage", "feature_class": "Storage.FC1", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/accountMigrations/write", "event_name": "TODO", "stage": "TBD", "action_id_int": 152}, "Storage.A153": {"action_description": "List filesystems and their properties in given account.", "api": "Filesystem_List", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/read", "event_name": "TODO", "stage": "stable", "action_id_int": 153}, "Storage.A154": {"action_description": "Create a filesystem rooted at the specified location. If the filesystem already exists, the operation fails. This operation does not support conditional HTTP requests.", "api": "Filesystem_Create", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "core", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/write", "event_name": "TODO", "stage": "stable", "action_id_int": 154}, "Storage.A155": {"action_description": "Set properties for the filesystem. This operation supports conditional HTTP requests.", "api": "Filesystem_Setproperties", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write", "event_name": "TODO", "stage": "stable", "action_id_int": 155}, "Storage.A156": {"action_description": "List filesystem paths and their properties.", "api": "Path_List", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read", "event_name": "TODO", "stage": "stable", "action_id_int": 156}, "Storage.A157": {"action_description": "Get all system and user-defined filesystem properties are specified in the response headers.", "api": "Filesystem_Getproperties", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/read", "event_name": "TODO", "stage": "stable", "action_id_int": 157}, "Storage.A158": {"action_description": "Marks the filesystem for deletion. When a filesystem is deleted, a filesystem with the same identifier cannot be created for at least 30 seconds. While the filesystem is being deleted, attempts to create a filesystem with the same identifier will fail with status code 409 (Conflict), with the service returning additional error information indicating that the filesystem is being deleted. Get all other operations, including operations on any files or directories within the filesystem, will fail with status code 404 while the filesystem is being deleted. This operation supports conditional HTTP requests.", "api": "Filesystem_Delete", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/delete", "event_name": "TODO", "stage": "stable", "action_id_int": 158}, "Storage.A159": {"action_description": "Create or rename a file or directory. By default, the destination is overwritten and if the destination already exists and has a lease the lease is broken. This operation supports conditional HTTP requests.", "api": "Path_Create", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write", "event_name": "TODO", "stage": "stable", "action_id_int": 159}, "Storage.A160": {"action_description": "Uploads data to be appended to a file, flushes (writes) previously uploaded data to a file, sets properties for a file or directory, or sets access control for a file or directory. Data can only be appended to a file. This operation supports conditional HTTP requests.", "api": "Path_Update", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write", "event_name": "TODO", "stage": "stable", "action_id_int": 160}, "Storage.A161": {"action_description": "Create and manage a lease to restrict write and delete access to the path. This operation supports conditional HTTP requests.", "api": "Path_Lease", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write", "event_name": "TODO", "stage": "stable", "action_id_int": 161}, "Storage.A162": {"action_description": "Read the contents of a file. For read operations, range requests are supported. This operation supports conditional HTTP requests.", "api": "Path_Read", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read", "event_name": "TODO", "stage": "stable", "action_id_int": 162}, "Storage.A163": {"action_description": "Get properties returns all system and user defined properties for a path. Get status returns all system defined properties for a path. Get Access Control List returns the access control list for a path. This operation supports conditional HTTP requests.", "api": "Path_Getproperties", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read", "event_name": "TODO", "stage": "stable", "action_id_int": 163}, "Storage.A164": {"action_description": "Delete the file or directory. This operation supports conditional HTTP requests.", "api": "Path_Delete", "endpoint": "{storage-account-name}.dfs.core.windows.net", "feature_class": "Storage.FC2", "feature_class_action_type": "other", "iam_permission": "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/delete", "event_name": "TODO", "stage": "stable", "action_id_int": 164}}}